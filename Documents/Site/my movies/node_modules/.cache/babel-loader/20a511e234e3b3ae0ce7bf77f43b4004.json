{"ast":null,"code":"var _jsxFileName = \"/Users/romaindjalabz/Documents/Site/my movies/src/Components/AutoSuggest/index.js\";\n// server.autosuggest.js\nimport React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport './autosuggest.css';\n\nclass AutoSuggest extends React.Component {\n  constructor() {\n    super(); //Define state for value and suggestion collection\n\n    this.getSuggestions = async value => {\n      const inputValue = value.trim().toLowerCase();\n      let response = await fetch(\"http://www.omdbapi.com/?s=\" + inputValue + \"&apikey=eed08b06\");\n      let data = await response.json();\n      return data;\n    };\n\n    this.getSuggestionValue = suggestion => suggestion.Title;\n\n    this.renderSuggestion = suggestion => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sugg-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: suggestion.Poster,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, suggestion.Title));\n\n    this.onChange = (event, {\n      newValue\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.getSuggestions(value).then(data => {\n        if (data.Error) {\n          this.setState({\n            suggestions: []\n          });\n        } else {\n          this.setState({\n            suggestions: data.Search\n          });\n        }\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  } // Filter logic\n\n\n  render() {\n    const {\n      value,\n      suggestions\n    } = this.state; // Option props\n\n    const inputProps = {\n      placeholder: 'Type movie name',\n      value,\n      onChange: this.onChange\n    }; // Adding AutoSuggest component\n\n    return /*#__PURE__*/React.createElement(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      getSuggestionValue: this.getSuggestionValue,\n      renderSuggestion: this.renderSuggestion,\n      inputProps: inputProps,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default AutoSuggest;","map":{"version":3,"sources":["/Users/romaindjalabz/Documents/Site/my movies/src/Components/AutoSuggest/index.js"],"names":["React","Autosuggest","AutoSuggest","Component","constructor","getSuggestions","value","inputValue","trim","toLowerCase","response","fetch","data","json","getSuggestionValue","suggestion","Title","renderSuggestion","Poster","onChange","event","newValue","setState","onSuggestionsFetchRequested","then","Error","suggestions","Search","onSuggestionsClearRequested","state","render","inputProps","placeholder"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,GAAG;AACV,YADU,CAGV;;AAHU,SAWdC,cAXc,GAWG,MAAOC,KAAP,IAAiB;AAC9B,YAAMC,UAAU,GAAGD,KAAK,CAACE,IAAN,GAAaC,WAAb,EAAnB;AACA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+BJ,UAA/B,GAA4C,kBAA7C,CAA1B;AACA,UAAIK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,aAAOD,IAAP;AACH,KAhBa;;AAAA,SAmBdE,kBAnBc,GAmBOC,UAAU,IAAIA,UAAU,CAACC,KAnBhC;;AAAA,SAsBdC,gBAtBc,GAsBKF,UAAU,iBACzB;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA4B;AAAK,MAAA,GAAG,EAAEA,UAAU,CAACG,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,CADJ,eAEI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,UAAU,CAACC,KADhB,CAFJ,CAvBU;;AAAA,SAgCdG,QAhCc,GAgCH,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAyB;AAChC,WAAKC,QAAL,CAAc;AACVhB,QAAAA,KAAK,EAAEe;AADG,OAAd;AAGH,KApCa;;AAAA,SAuCdE,2BAvCc,GAuCgB,CAAC;AAAEjB,MAAAA;AAAF,KAAD,KAAe;AACzC,WAAKD,cAAL,CAAoBC,KAApB,EACKkB,IADL,CACUZ,IAAI,IAAI;AACV,YAAIA,IAAI,CAACa,KAAT,EAAgB;AACZ,eAAKH,QAAL,CAAc;AACVI,YAAAA,WAAW,EAAE;AADH,WAAd;AAGH,SAJD,MAIO;AACH,eAAKJ,QAAL,CAAc;AACVI,YAAAA,WAAW,EAAEd,IAAI,CAACe;AADR,WAAd;AAGH;AACJ,OAXL;AAYH,KApDa;;AAAA,SAuDdC,2BAvDc,GAuDgB,MAAM;AAChC,WAAKN,QAAL,CAAc;AACVI,QAAAA,WAAW,EAAE;AADH,OAAd;AAGH,KA3Da;;AAIV,SAAKG,KAAL,GAAa;AACTvB,MAAAA,KAAK,EAAE,EADE;AAEToB,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH,GATqC,CAWtC;;;AAmDAI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAExB,MAAAA,KAAF;AAASoB,MAAAA;AAAT,QAAyB,KAAKG,KAApC,CADK,CAGL;;AACA,UAAME,UAAU,GAAG;AACfC,MAAAA,WAAW,EAAE,iBADE;AAEf1B,MAAAA,KAFe;AAGfa,MAAAA,QAAQ,EAAE,KAAKA;AAHA,KAAnB,CAJK,CAUL;;AACA,wBACI,oBAAC,WAAD;AACI,MAAA,WAAW,EAAEO,WADjB;AAEI,MAAA,2BAA2B,EAAE,KAAKH,2BAFtC;AAGI,MAAA,2BAA2B,EAAE,KAAKK,2BAHtC;AAII,MAAA,kBAAkB,EAAE,KAAKd,kBAJ7B;AAKI,MAAA,gBAAgB,EAAE,KAAKG,gBAL3B;AAMI,MAAA,UAAU,EAAEc,UANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH;;AAnFqC;;AAsF1C,eAAe7B,WAAf","sourcesContent":["// server.autosuggest.js\nimport React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport './autosuggest.css';\n\nclass AutoSuggest extends React.Component {\n    constructor() {\n        super();\n\n        //Define state for value and suggestion collection\n        this.state = {\n            value: '',\n            suggestions: []\n        };\n    }\n\n    // Filter logic\n    getSuggestions = async (value) => {\n        const inputValue = value.trim().toLowerCase();\n        let response = await fetch(\"http://www.omdbapi.com/?s=\" + inputValue + \"&apikey=eed08b06\");\n        let data = await response.json()\n        return data;\n    };\n\n    // Trigger suggestions\n    getSuggestionValue = suggestion => suggestion.Title;\n\n    // Render Each Option\n    renderSuggestion = suggestion => (\n        <span className=\"sugg-option\">\n            <span className=\"icon-wrap\"><img src={suggestion.Poster} /></span>\n            <span className=\"name\">\n                {suggestion.Title}\n            </span>\n        </span>\n    );\n\n    // OnChange event handler\n    onChange = (event, { newValue }) => {\n        this.setState({\n            value: newValue\n        });\n    };\n\n    // Suggestion rerender when user types\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.getSuggestions(value)\n            .then(data => {\n                if (data.Error) {\n                    this.setState({\n                        suggestions: []\n                    });\n                } else {\n                    this.setState({\n                        suggestions: data.Search\n                    });\n                }\n            })\n    };\n\n    // Triggered on clear\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    render() {\n        const { value, suggestions } = this.state;\n\n        // Option props\n        const inputProps = {\n            placeholder: 'Type movie name',\n            value,\n            onChange: this.onChange\n        };\n\n        // Adding AutoSuggest component\n        return (\n            <Autosuggest\n                suggestions={suggestions}\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                getSuggestionValue={this.getSuggestionValue}\n                renderSuggestion={this.renderSuggestion}\n                inputProps={inputProps}\n            />\n        );\n    }\n}\n\nexport default AutoSuggest;"]},"metadata":{},"sourceType":"module"}